// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  username   String      @unique
  password   String
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  resetToken ResetToken?
  room       Room[]
  friends    Friend[]    @relation("UserFriends")
  friendsOf  Friend[]    @relation("UserFriendsOf")
}

model ResetToken {
  id         Int      @id @default(autoincrement())
  token      String
  user_id    Int      @unique
  user       User     @relation(fields: [user_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Room {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  owner_id    Int
  video_url   String
  owner       User     @relation(fields: [owner_id], references: [id])
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Friend {
  id         Int      @id @default(autoincrement())
  user_id    Int
  friend_id  Int
  status     String   @default("pending")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user   User @relation("UserFriends", fields: [user_id], references: [id])
  friend User @relation("UserFriendsOf", fields: [friend_id], references: [id])

  @@unique([user_id, friend_id])
}
